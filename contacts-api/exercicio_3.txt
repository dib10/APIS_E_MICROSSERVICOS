üìå Quest√µes:

1. Qual a principal diferen√ßa entre REST e SOAP?

R: A arquitetura REST √© mais simples e flex√≠vel. Ela utiliza HTTP e suporta JSON e XML. Ela √© ideal para sistemas mais modernos e escal√°veis.

A arquitetura SOAP ela √© mais "complexa", usa XML e √© rigorosa. Utilizada normalmente em sistemas corporativos que exigem seguran√ßa e confiabilidade.


2. Em quais cen√°rios SOAP ainda √© utilizado?

R: Como dito na quest√£o anterior, a arquitetura SOAP √© normalmente utilizada em sistemas empresariais complexos e governamentais que exigem uma alta seguran√ßa. Tamb√©m utilizada em integra√ß√µes legadas.

3. Quais s√£o as vantagens e desvantagens de usar REST ao inv√©s de SOAP?

As vantagens de utilizar a arquitetura REST √© sua simplicidade, flexibilidade, melhor desempenho e mais "f√°cil" de implementar.

As desvantagens s√£o que possui menos recursos nativos de seguran√ßas e transa√ß√µes, que o SOAP oferece. 

4. O que √© WS-Security e como ele se compara √† seguran√ßa em APIs REST?

R: Ws-Security √© um padr√£o de seguran√ßa da arquitetura SOAP, que oferece autentica√ß√£o e criptografia robustas. Por exemplo, o REST usa HTTPS e autentica√ß√£o OAuth / JWT, mas n√£o tem a mesma seguran√ßa nativa do SOAP

5. Explique o modelo de maturidade de Richardson.
R:

N√≠vel 0: simples, sem diferencia√ß√£o de m√©todos HTTP.

N√≠vel 1: URLs separadas para diferentes recursos.

N√≠vel 2: Melhor uso de verbos HTTP (GET, POST, outros).

N√≠vel 3: HATEOAS ‚Äî links adicionais na resposta para o pr√≥ximo passo da intera√ß√£o.

6. O que √© GraphQL? Pesquisa e relacione com os conceitos vistos em aula.

R: √â uma linguagem flex√≠vel de consultas para apis onde o cliente escolhe exatamente os dados que deseja, sem receber informa√ß√µes adicionais. Isso melhora a efici√™ncia em rela√ß√£o ao REST.


